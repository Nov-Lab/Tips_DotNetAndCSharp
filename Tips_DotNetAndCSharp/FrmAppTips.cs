// @(h)FrmAppTips.cs ver 0.00 ( '24.02.02 Nov-Lab ) 作成開始
// @(h)FrmAppTips.cs ver 0.51 ( '24.02.02 Nov-Lab ) ベータ版完成
// @(h)FrmAppTips.cs ver 0.51a( '24.04.27 Nov-Lab ) その他  ：コメント整理

// @(s)
// 　【Tips集メインフォーム】Tipsメソッドを一覧表示し、実行するための画面です。

using System;
using System.Diagnostics;
using System.Collections.Generic;
using System.Text;
using System.Drawing;
using System.Windows.Forms;
using System.Media;


namespace Tips_DotNetAndCSharp
{
    //====================================================================================================
    /// <summary>
    /// 【Tips集メインフォーム】Tipsメソッドを一覧表示し、実行するための画面です。
    /// </summary>
    //====================================================================================================
    public partial class FrmAppTips : Form
    {
        //====================================================================================================
        // コンストラクターとフォームイベント
        //====================================================================================================

        //--------------------------------------------------------------------------------
        /// <summary>
        /// 【コンストラクター】自動生成された内容のままです。
        /// </summary>
        //--------------------------------------------------------------------------------
        public FrmAppTips()
        {
            InitializeComponent();
        }


        //--------------------------------------------------------------------------------
        /// <summary>
        /// 【フォーム_Load】アプリケーションと本フォームを初期化します。
        /// </summary>
        //--------------------------------------------------------------------------------
        private void FrmAppTips_Load(object sender, EventArgs e)
        {
            //------------------------------------------------------------
            /// アプリケーションを初期化する
            //------------------------------------------------------------
            AppBase.Initialize(this);                                   //// アプリケーション初期化処理を行う


            //------------------------------------------------------------
            /// 本フォームを初期化する
            //------------------------------------------------------------
            var tipsMethodInfos = TipsMethodAttribute.CollectInfo();    //// Tipsメソッド情報を収集する
            foreach (var tmpInfo in tipsMethodInfos)
            {                                                           //// Tipsメソッド情報配列を繰り返す
                LstTips.Items.Add(tmpInfo);                             /////  Tips一覧リストボックスへ追加する
            }
        }


        // ＜メモ＞
        // ・M_RunTips は直接イベントハンドラーに設定してもいいが、呼び出し箇所をソースファイル上で明確に認識できるようにしている。
        //====================================================================================================
        // コントロールイベント
        //====================================================================================================

        //--------------------------------------------------------------------------------
        /// <summary>
        /// 【Tips実行ボタン_Click】Tips実行処理を行います。
        /// </summary>
        //--------------------------------------------------------------------------------
        private void BtnRunTips_Click(object sender, EventArgs e) => M_RunTips();


        //--------------------------------------------------------------------------------
        /// <summary>
        /// 【Tips一覧リスト_DoubleClick】Tips実行処理を行います。
        /// </summary>
        //--------------------------------------------------------------------------------
        private void LstTips_DoubleClick(object sender, EventArgs e) => M_RunTips();


        //====================================================================================================
        // 実行結果リストボックス用コンテキストメニュー
        //====================================================================================================

        //--------------------------------------------------------------------------------
        /// <summary>
        /// 【実行結果リストボックス用コンテキストメニュー - コピー_Click】
        /// 実行結果リストボックスの全内容をクリップボードへコピーします。
        /// </summary>
        //--------------------------------------------------------------------------------
        private void CMnu_LstOutput_Copy_Click(object sender, EventArgs e)
        {
            //------------------------------------------------------------
            /// 実行結果リストボックスの全内容をクリップボードへコピーする
            //------------------------------------------------------------
            var workStr = new StringBuilder();                          //// 文字列編集領域を生成する

            foreach (var tmpItem in LstOutput.Items)
            {                                                           //// 実行結果リストボックスの全項目を繰り返す
                workStr.Append(tmpItem.ToString() + "\r\n");            /////  リストボックス項目の内容を文字列編集領域に追加する
            }

            Clipboard.SetText(workStr.ToString());                      //// 文字列編集領域の内容をクリップボードにコピーする
        }


        //--------------------------------------------------------------------------------
        /// <summary>
        /// 【実行結果リストボックス用コンテキストメニュー - クリア_Click】
        /// 実行結果リストボックスの内容をクリアします。
        /// </summary>
        //--------------------------------------------------------------------------------
        private void CMnu_LstOutput_Clear_Click(object sender, EventArgs e) => LstOutput.Items.Clear();


        //====================================================================================================
        // 公開メソッド
        //====================================================================================================

        //--------------------------------------------------------------------------------
        /// <summary>
        /// 【出力情報追加】実行結果リストボックスにメッセージ文字列を追加します。
        /// </summary>
        /// <param name="message">[in ]：メッセージ文字列</param>
        /// <remarks>
        /// 補足<br/>
        /// ・<see cref="MyTraceListener"/> から使用します。<br/>
        /// </remarks>
        //--------------------------------------------------------------------------------
        public void AddOutput(string message)
        {
            bool postSelect;    // 追加処理後選択フラグ


            // ＜メモ＞この処理は単一選択リストボックス用です。
            //------------------------------------------------------------
            /// 追加処理後に選択状態にすべきかどうかを決定する
            //------------------------------------------------------------
            if (LstOutput.SelectedIndex == -1)
            {                                                           //// 選択中の項目がない場合
                postSelect = true;                                      /////  追加処理後選択フラグ = true
            }
            else if (LstOutput.SelectedIndex == LstOutput.Items.Count - 1)
            {                                                           //// 最後の項目を選択している場合
                postSelect = true;                                      /////  追加処理後選択フラグ = true
            }
            else
            {                                                           //// 最後以外の項目を選択している場合
                postSelect = false;                                     /////  追加処理後選択フラグ = false
            }


            //------------------------------------------------------------
            /// 実行結果リストボックスにメッセージ文字列を追加する
            //------------------------------------------------------------
            var addedIndex = LstOutput.Items.Add(message);              //// 実行結果リストボックスにメッセージ文字列を追加する
            if (postSelect)
            {                                                           //// 追加処理後選択フラグ = true の場合
                LstOutput.SelectedIndex = addedIndex;                   /////  追加した項目を選択状態にする
            }
        }


        //====================================================================================================
        // 内部メソッド
        //====================================================================================================

        //--------------------------------------------------------------------------------
        /// <summary>
        /// 【Tips実行】Tips一覧リストボックスで選択されているTipsを実行します。
        /// </summary>
        //--------------------------------------------------------------------------------
        protected void M_RunTips()
        {
            //------------------------------------------------------------
            /// Tips一覧リストボックスで選択項目がない場合はエラー
            //------------------------------------------------------------
            if (LstTips.SelectedIndex == -1)
            {                                                           //// Tips一覧リストボックスで選択項目がない場合
                SystemSounds.Beep.Play();                               /////  Beep音を鳴らす
                MessageBox.Show("Tips が選択されていません。",          /////  エラーメッセージを表示する
                                "Tips実行", MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
                return;                                                 /////  関数終了
            }


            //------------------------------------------------------------
            /// Tips一覧リストボックスで選択されているTipsを実行する
            //------------------------------------------------------------
            var tipsMethodInfo = (TipsMethodInfo)LstTips.SelectedItem;  //// Tips一覧リストボックスで選択されているTipsメソッド情報を取得する
            AddOutput($"【{tipsMethodInfo.DisplayName}】");             //// 見出し文字列(Tipsメソッド表示名)を出力する
            tipsMethodInfo.actTipsMethod();                             //// Tipsメソッドを実行する
            AddOutput("");                                              //// 区切り用の空行を出力する
        }

    } // class

} // namespace
